name: CI & Docker Publish

on:
  push:
    branches: [main, master, team-z-moshe]
    tags:
      - "v*.*.*"
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [main, master, team-z-moshe]

env:
  PYTHON_VERSION: "3.11"
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/calculator-app

jobs:
  test:
    name: Run tests (pytest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest -q

  docker-hub:
    name: Build and publish to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check Docker Hub credentials
        id: check-docker
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ] || [ -z "${{ secrets.DOCKER_TOKEN }}" ]; then
            echo "Docker Hub credentials not set, skipping..."
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Determine image tag
        id: meta
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v.* ]]; then
            # Version tag exists, use it
            TAG=${GITHUB_REF#refs/tags/}
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
            echo "is_version_tag=true" >> $GITHUB_OUTPUT
            echo "docker_tags=latest,${TAG}" >> $GITHUB_OUTPUT
          else
            # No tag (branch push), use latest only
            TAG="latest"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
            echo "is_version_tag=false" >> $GITHUB_OUTPUT
            echo "docker_tags=latest" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Docker Hub
        if: steps.check-docker.outputs.skip != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Prepare Docker tags
        if: steps.check-docker.outputs.skip != 'true'
        id: prepare-tags
        run: |
          TAGS="${env.IMAGE_NAME}:latest"
          if [[ "${{ steps.meta.outputs.is_version_tag }}" == "true" ]]; then
            TAGS="${TAGS}"$'\n'"${env.IMAGE_NAME}:${{ steps.meta.outputs.tag }}"
          fi
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push to Docker Hub
        if: steps.check-docker.outputs.skip != 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.prepare-tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  artifactory:
    name: Build and publish to Artifactory
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check Artifactory credentials
        id: check-artifactory
        run: |
          if [ -z "${{ secrets.ARTIFACTORY_URL }}" ] || [ -z "${{ secrets.ARTIFACTORY_USERNAME }}" ] || [ -z "${{ secrets.ARTIFACTORY_PASSWORD }}" ]; then
            echo "Artifactory credentials not set, skipping..."
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Extract version from tag
        if: steps.check-artifactory.outputs.skip != 'true'
        id: meta
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Log in to Artifactory
        if: steps.check-artifactory.outputs.skip != 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACTORY_URL }}
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Build and push to Artifactory
        if: steps.check-artifactory.outputs.skip != 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.ARTIFACTORY_URL }}/${{ secrets.ARTIFACTORY_REPO }}/calculator-app:${{ steps.meta.outputs.tag }}
            ${{ secrets.ARTIFACTORY_URL }}/${{ secrets.ARTIFACTORY_REPO }}/calculator-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-render:
    name: Deploy to Render.com
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Render credentials
        id: check-render
        run: |
          if [ -z "${{ secrets.RENDER_API_KEY }}" ] || [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
            echo "Render credentials not set, skipping..."
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Trigger Render deployment
        if: steps.check-render.outputs.skip != 'true'
        run: |
          curl -X POST "https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
        continue-on-error: true
